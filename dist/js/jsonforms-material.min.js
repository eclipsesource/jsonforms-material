"use strict";!function(a){a.directive("jsonformsMaterialLayout",function(){return{restrict:"E",replace:!0,transclude:!0,templateUrl:"components/renderers/layouts/layout.html"}})}(angular.module("jsonforms-material.renderers.layouts",["jsonforms.renderers"])),angular.module("jsonforms-material.renderers.layouts.categories",["jsonforms-material.renderers.layouts"]),function(a){var b=function(){function a(a){this.renderService=a,this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.renderElements(a.elements,this.renderService,d),f='<jsonforms-material-layout>\n            <md-tabs md-border-bottom md-dynamic-height md-autoselect>\n            <!--\n                <dynamic-widget ng-repeat="child in element.elements" element="child"></dynamic-widget>\n            -->\n                <md-tab ng-repeat="child in element.elements" label="{{child.label}}">\n                    <jsonforms-material-layout>\n                        <fieldset>\n                            <md-content layout-padding layout="column">\n                                <jsonforms-dynamic-widget ng-repeat="innerchild in child.elements" element="innerchild"></jsonforms-dynamic-widget>\n                            </md-content>\n                        </fieldset>\n                    </jsonforms-material-layout>\n                </md-tab>\n            </md-tabs>\n        </jsonforms-material-layout>';return JSONForms.RenderDescriptionFactory.createContainerDescription(99,e,f,d,a)},a.prototype.isApplicable=function(a,b,c){return"Categorization"==a.type},a}();a.run(["RenderService",function(a){a.register(new b(a))}])}(angular.module("jsonforms-material.renderers.layouts.categories.categorization",["jsonforms-material.renderers.layouts.categories"])),function(a){var b=function(){function a(a){this.renderService=a,this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.renderElements(a.elements,this.renderService,d),f=a.label,g='\n        <!--\n            <md-tab label="{{element.label}}">\n                <jsonforms-material-layout>\n                    <fieldset>\n                        <md-content layout-padding layout="column">\n                            <dynamic-widget ng-repeat="child in element.elements" element="child"></dynamic-widget>\n                        </md-content>\n                    </fieldset>\n                </jsonforms-material-layout>\n            </md-tab>\n        -->\n        ',h=JSONForms.RenderDescriptionFactory.createContainerDescription(99,e,g,d,a);return h.label=f,h},a.prototype.isApplicable=function(a,b,c){return"Category"==a.type},a}();a.run(["RenderService",function(a){a.register(new b(a))}])}(angular.module("jsonforms-material.renderers.layouts.categories.category",["jsonforms-material.renderers.layouts.categories"])),function(a){var b=function(){function a(a){this.renderService=a,this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.renderElements(a.elements,this.renderService,d),f=a.label?a.label:"",g='\n        <jsonforms-material-layout class="jsf-group">\n            <fieldset>\n                <legend>'+f+'</legend>\n                <div layout-padding layout="column">\n                    <jsonforms-dynamic-widget ng-repeat="child in element.elements" element="child"></jsonforms-dynamic-widget>\n                </div>\n            </fieldset>\n        </jsonforms-material-layout>\n        ';return JSONForms.RenderDescriptionFactory.createContainerDescription(99,e,g,d,a)},a.prototype.isApplicable=function(a,b,c){return"Group"==a.type},a}();a.run(["RenderService",function(a){a.register(new b(a))}])}(angular.module("jsonforms-material.renderers.layouts.group",["jsonforms-material.renderers.layouts"])),function(a){var b=function(){function a(a){this.renderService=a,this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.renderElements(a.elements,this.renderService,d),f='\n            <jsonforms-material-layout>\n                <fieldset>\n                    <div layout-padding layout="column">\n                        <jsonforms-dynamic-widget ng-repeat="child in element.elements" element="child"></jsonforms-dynamic-widget>\n                    </div>\n                </fieldset>\n            </jsonforms-material-layout>\n            ';return JSONForms.RenderDescriptionFactory.createContainerDescription(99,e,f,d,a)},a.prototype.isApplicable=function(a,b,c){return"VerticalLayout"==a.type},a}();a.run(["RenderService",function(a){a.register(new b(a))}])}(angular.module("jsonforms-material.renderers.layouts.vertical",["jsonforms-material.renderers.layouts"])),function(a){var b=function(){function a(a){this.renderService=a,this.priority=10}return a.prototype.render=function(a,b,c,d){for(var e=99,f=JSONForms.RenderDescriptionFactory.renderElements(a.elements,this.renderService,d),g=f.length,h=Math.floor(e/g),i=0;i<f.length;i++)f[i].size=h;var j='\n        <jsonforms-material-layout>\n            <fieldset>\n                <div layout-padding layout="row" layout-sm="column">\n                    <jsonforms-dynamic-widget ng-repeat="child in element.elements" element="child"></jsonforms-dynamic-widget>\n                </div>\n            </fieldset>\n        </jsonforms-material-layout>\n        ';return JSONForms.RenderDescriptionFactory.createContainerDescription(e,f,j,d,a)},a.prototype.isApplicable=function(a,b,c){return"HorizontalLayout"==a.type},a}();a.run(["RenderService",function(a){a.register(new b(a))}])}(angular.module("jsonforms-material.renderers.layouts.horizontal",["jsonforms-material.renderers.layouts"])),function(a){var b=function(){function a(){this.restrict="E",this.replace=!0,this.transclude=!0,this.templateUrl="components/renderers/controls/control.html"}return a}();a.directive("jsonformsMaterialControl",function(){return new b})}(angular.module("jsonforms-material.renderers.controls",["jsonforms.renderers"])),function(a){var b=function(){function a(){this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.createControlDescription(c,d,a);a.label?a.label:"";return e.template='\n        <!--the css class is a temporary fix for https://github.com/angular/material/issues/1268-->\n        <md-input-container flex class="md-input-has-value">\n            <label ng-if="element.label" for="{{element.id}}">{{element.label}}</label>\n            <md-checkbox id="'+c+'" class="md-primary" aria-label="{{element.label}}" data-jsonforms-validation data-jsonforms-model/></md-checkbox>\n        </md-input-container>\n        ',e},a.prototype.isApplicable=function(a,b,c){return"Control"==a.type&&void 0!==b&&"boolean"==b.type},a}();a.run(["RenderService",function(a){a.register(new b)}])}(angular.module("jsonforms-material.renderers.controls.boolean",["jsonforms-material.renderers.controls"])),function(a){var b=function(){function a(){this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.createControlDescription(c,d,a);a.label?a.label:"";return e.template='\n        <!--the css class is a temporary fix for https://github.com/angular/material/issues/4233-->\n        <div flex class="material-jsf-input-container">\n            <label ng-if="element.label" for="{{element.id}}">{{element.label}}</label>\n            <md-datepicker id="'+c+'" data-jsonforms-model md-placeholder="{{element.label}}"></md-datepicker>\n        </div>\n        ',e},a.prototype.isApplicable=function(a,b,c){return"Control"==a.type&&void 0!==b&&"string"==b.type&&void 0!=b.format&&"date-time"==b.format},a}();a.run(["RenderService",function(a){a.register(new b)}])}(angular.module("jsonforms-material.renderers.controls.datetime",["jsonforms-material.renderers.controls"])),function(a){var b=function(){function a(a){this.pathResolver=a,this.priority=11}return a.prototype.render=function(a,b,c,d){var e=this.pathResolver.resolveSchema(b,c),f=e["enum"],g=JSONForms.RenderDescriptionFactory.createControlDescription(c,d,a);return g.template='<md-input-container flex>\n            <label ng-if="element.label" for="{{element.id}}">{{element.label}}</label>\n            <md-select data-jsonforms-model aria-label="{{element.label}}">\n              <md-option ng-repeat="option in element.options" value="{{option}}" id="'+c+'">\n                {{option}}\n              </md-option>\n            </md-select>\n        </md-input-container>\n        ',g.options=f,g},a.prototype.isApplicable=function(a,b,c){return"Control"==a.type&&void 0!==b&&b.hasOwnProperty("enum")},a}();a.run(["RenderService","PathResolver",function(a,c){a.register(new b(c))}])}(angular.module("jsonforms-material.renderers.controls.enum",["jsonforms-material.renderers.controls"])),function(a){var b=function(){function a(){this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.createControlDescription(c,d,a);return e.template='<jsonforms-material-control><input type="number" step="1" id="'+c+'" aria-label="{{element.label}}" data-jsonforms-validation data-jsonforms-model/></jsonforms-material-control>',e},a.prototype.isApplicable=function(a,b,c){return"Control"==a.type&&void 0!==b&&"integer"==b.type},a}();a.run(["RenderService",function(a){a.register(new b)}])}(angular.module("jsonforms-material.renderers.controls.integer",["jsonforms-material.renderers.controls"])),function(a){var b=function(){function a(){this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.createControlDescription(c,d,a);return e.template='<jsonforms-material-control><input type="number" step="0.01" id="'+c+'" aria-label="{{element.label}}" data-jsonforms-validation data-jsonforms-model/></jsonforms-material-control>',e},a.prototype.isApplicable=function(a,b,c){return"Control"==a.type&&void 0!==b&&"number"==b.type},a}();a.run(["RenderService",function(a){a.register(new b)}])}(angular.module("jsonforms-material.renderers.controls.number",["jsonforms-material.renderers.controls"])),function(a){var b=function(){function a(){this.priority=10}return a.prototype.render=function(a,b,c,d){var e=JSONForms.RenderDescriptionFactory.createControlDescription(c,d,a);return e.template='<jsonforms-material-control><input type="text" id="'+c+'" aria-label="{{element.label}}" data-jsonforms-model data-jsonforms-validation/></jsonforms-material-control>',e},a.prototype.isApplicable=function(a,b,c){return"Control"==a.type&&void 0!==b&&"string"==b.type},a.inject=["RenderDescriptionFactory"],a}();a.run(["RenderService",function(a){a.register(new b)}])}(angular.module("jsonforms-material.renderers.controls.string",["jsonforms-material.renderers.controls"])),angular.module("jsonforms-material",["jsonforms","jsonforms.renderers","jsonforms-material.renderers.layouts","jsonforms-material.renderers.layouts.categories","jsonforms-material.renderers.layouts.categories.categorization","jsonforms-material.renderers.layouts.categories.category","jsonforms-material.renderers.layouts.group","jsonforms-material.renderers.layouts.vertical","jsonforms-material.renderers.layouts.horizontal","jsonforms-material.renderers.controls","jsonforms-material.renderers.controls.boolean","jsonforms-material.renderers.controls.datetime","jsonforms-material.renderers.controls.enum","jsonforms-material.renderers.controls.integer","jsonforms-material.renderers.controls.number","jsonforms-material.renderers.controls.string"]),angular.module("jsonforms-material").run(["$templateCache",function(a){a.put("components/renderers/controls/control.html",'<md-input-container flex><label ng-if="element.label" for="{{element.id}}">{{element.label}}</label><ng-transclude></ng-transclude><div ng-messages="{{element.label}}.$error" role="alert"><div ng-repeat="errorMessage in element.alerts"><!-- use ng-message-exp for a message whose key is given by an expression --><div ng-message-exp="errorMessage.type">{{ errorMessage.msg }}</div></div></div></md-input-container>'),a.put("components/renderers/layouts/layout.html","<div flex ng-transclude></div>")}]);